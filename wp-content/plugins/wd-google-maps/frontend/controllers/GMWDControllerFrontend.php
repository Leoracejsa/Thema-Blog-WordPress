<?php

class GMWDControllerFrontend {
	////////////////////////////////////////////////////////////////////////////////////////
	// Events                                                                             //
	////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////
	// Constants                                                                          //
	////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////
	// Variables                                                                          //
	////////////////////////////////////////////////////////////////////////////////////////
	public $page;
	public $task;
	public $model;
	public $view;
	public $parmas;
	////////////////////////////////////////////////////////////////////////////////////////
	// Constructor & Destructor                                                           //
	////////////////////////////////////////////////////////////////////////////////////////
	public function __construct($params = "") {
        if(GMWDHelper::get("f_p") == 1){
            error_reporting(0);
        }
		//$this->page = $params ? $params["page"] : GMWDHelper::get('controller');
		$this->page = 'map';
		$this->params = $params;

		$task = GMWDHelper::get('task') ? GMWDHelper::get('task') : "display";
		$this->task = $task; 

		$model_class = 'GMWDModelFrontend' . ucfirst($this->page);
		$view_class = 'GMWDViewFrontend' . ucfirst($this->page);

		require_once GMWD_DIR . "/frontend/models/".$model_class.".php";
		$this->model = new $model_class($this->params);

		require_once GMWD_DIR . "/frontend/views/".$view_class.".php";
		$this->view = new $view_class($this->model);
				
	}
	////////////////////////////////////////////////////////////////////////////////////////
	// Public Methods                                                                     //
	////////////////////////////////////////////////////////////////////////////////////////
	public function execute() {
		$task = $this->task; 
        if(method_exists($this, $task)){
            $this->$task();
        }
	}
	public function display() {
		$view = $this->view;
		$view->display();	
	}
	////////////////////////////////////////////////////////////////////////////////////////
	// Getters & Setters                                                                  //
	////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////
	// Private Methods                                                                    //
	////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////
	// Listeners                                                                          //
	////////////////////////////////////////////////////////////////////////////////////////
}